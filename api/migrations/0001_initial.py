# Generated by Django 4.0.6 on 2022-07-17 13:03

import api.models
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Badges',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adi', models.CharField(default='', max_length=75)),
                ('detay', models.TextField(default='', max_length=340)),
                ('gorseli', models.ImageField(default='/userprofiles/canberk2/628286_anonym_avatar_default_head_person_icon.png', upload_to='badges/')),
                ('puan', models.PositiveIntegerField(default=0)),
                ('uyeler', models.ManyToManyField(blank=True, null=True, related_name='badges_kazananlar', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icerik', models.TextField(max_length=200)),
                ('olusturan', models.TextField(max_length=18)),
                ('tarih', models.DateTimeField(auto_now_add=True, null=True)),
                ('gorsel', models.ImageField(blank=True, null=True, upload_to=api.models.nameFile3)),
                ('likes', models.ManyToManyField(blank=True, null=True, related_name='blogpost_like', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BlogPostComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yazan', models.TextField(max_length=18)),
                ('body', models.TextField(max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('asagi', models.ManyToManyField(blank=True, null=True, related_name='blogcomment_down', to=settings.AUTH_USER_MODEL)),
                ('blogpost', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blogpostcomments', to='api.blogpost')),
                ('yukari', models.ManyToManyField(blank=True, null=True, related_name='blogcomment_up', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=175)),
                ('kisalink', models.SlugField(blank=True, null=True, unique=True)),
                ('ozet', models.TextField(max_length=360)),
                ('olusturan', models.TextField(max_length=18)),
                ('olusturanid', models.TextField(max_length=18)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=api.models.nameFile)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('sliderde', models.BooleanField(default=False)),
                ('yayinda', models.BooleanField(default=False)),
                ('liste', models.TextField(blank=True, max_length=10000, null=True)),
                ('listeicerik', models.TextField(blank=True, max_length=10000, null=True)),
                ('listegorsel', models.TextField(blank=True, max_length=10000, null=True)),
                ('kategori', models.TextField(choices=[('Gündem', 'Gündem'), ('Liste', 'Liste'), ('Test', 'Test'), ('Goygoy', 'Goygoy'), ('Dizi ve Film', 'Dizi ve Film'), ('Kültür ve Sanat', 'Kültür ve Sanat'), ('Moda', 'Moda'), ('Spor', 'Spor'), ('Teknoloji ve Bilim', 'Teknoloji ve Bilim'), ('Astroloji', 'Astroloji'), ('Yemek', 'Yemek'), ('Oyun', 'Oyun')], default='Gundem', max_length=900)),
                ('vucut', tinymce.models.HTMLField()),
                ('goruntulenme', models.IntegerField(default=0)),
                ('hashtagler', models.TextField(blank=True, max_length=900, null=True)),
                ('alkis', models.ManyToManyField(blank=True, null=True, related_name='emoji_alkis', to=settings.AUTH_USER_MODEL)),
                ('begenenler', models.ManyToManyField(blank=True, null=True, related_name='content_liked', to=settings.AUTH_USER_MODEL)),
                ('endiseli', models.ManyToManyField(blank=True, null=True, related_name='emoji_endise', to=settings.AUTH_USER_MODEL)),
                ('igrenc', models.ManyToManyField(blank=True, null=True, related_name='emoji_igrenc', to=settings.AUTH_USER_MODEL)),
                ('komik', models.ManyToManyField(blank=True, null=True, related_name='emoji_komik', to=settings.AUTH_USER_MODEL)),
                ('okuyacaklar', models.ManyToManyField(blank=True, null=True, related_name='content_okuyacak', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContentComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yazan', models.TextField(max_length=18)),
                ('yazanid', models.TextField(max_length=18)),
                ('body', models.TextField(max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('asagi', models.ManyToManyField(blank=True, null=True, related_name='contentcomment_down', to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contentcomment', to='api.content')),
                ('yukari', models.ManyToManyField(blank=True, null=True, related_name='contentcomment_up', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_users', models.ManyToManyField(blank=True, null=True, related_name='created', to=settings.AUTH_USER_MODEL)),
                ('deleted_by', models.ManyToManyField(blank=True, null=True, related_name='deleted', to=settings.AUTH_USER_MODEL)),
                ('user_one', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='user_one', to=settings.AUTH_USER_MODEL)),
                ('user_two', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='user_two', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user_one', 'user_two')},
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.ImageField(blank=True, default='/grup/default.jpg', null=True, upload_to=api.models.nameFile5)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, default='', max_length=80)),
                ('bilgilendirme', models.TextField(blank=True, default='', max_length=800)),
                ('gizligrup', models.TextField(default='0')),
                ('olusturulma', models.DateTimeField(auto_now_add=True)),
                ('puan', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('uyeler', models.ManyToManyField(blank=True, null=True, related_name='grup_uyeleri', to=settings.AUTH_USER_MODEL)),
                ('uyelerasil', models.ManyToManyField(blank=True, null=True, related_name='grup_uyelerasil', to=settings.AUTH_USER_MODEL)),
                ('yoneticiler', models.ManyToManyField(blank=True, null=True, related_name='grup_yoneticileri', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GrupIcerikleri',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icerik', models.TextField(max_length=180)),
                ('image_url', models.ImageField(blank=True, null=True, upload_to=api.models.nameFile6)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('puan', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('begenenler', models.ManyToManyField(blank=True, null=True, related_name='icerikgrup_begenenler', to=settings.AUTH_USER_MODEL)),
                ('grup', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='icerikgrup', to='api.group')),
                ('yazan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalityAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=100)),
                ('img', models.ImageField(blank=True, upload_to=api.models.nameFile9)),
            ],
        ),
        migrations.CreateModel(
            name='PersonalityResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sonuc', models.TextField(max_length=100)),
                ('descr', models.TextField(blank=True, default='', max_length=800, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to=api.models.nameFile8)),
            ],
        ),
        migrations.CreateModel(
            name='PollAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=100)),
                ('img', models.ImageField(blank=True, null=True, upload_to=api.models.nameFile12)),
                ('katilanlar', models.ManyToManyField(blank=True, null=True, related_name='katilanlaracik', to=settings.AUTH_USER_MODEL)),
                ('katilanlarsecret', models.ManyToManyField(blank=True, null=True, related_name='katilanlargizli', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PollQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(default='', max_length=100)),
                ('body', models.TextField(default='', max_length=100)),
                ('img', models.ImageField(blank=True, null=True, upload_to=api.models.nameFile13)),
                ('olusturan', models.TextField(default='', max_length=18)),
                ('answer', models.ManyToManyField(blank=True, null=True, related_name='poll_answer', to='api.pollanswer')),
            ],
        ),
        migrations.CreateModel(
            name='QuizAnswers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=100)),
                ('img', models.ImageField(blank=True, null=True, upload_to=api.models.nameFile10)),
                ('dogrumu', models.TextField(default='false', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(default='', max_length=100)),
                ('body', models.TextField(blank=True, default='', max_length=100, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to=api.models.nameFile11)),
                ('olusturan', models.TextField(default='', max_length=18)),
                ('answer', models.ManyToManyField(blank=True, null=True, related_name='quiz_answer', to='api.quizanswers')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=155)),
                ('ad', models.TextField(blank=True, max_length=25)),
                ('soyad', models.TextField(blank=True, max_length=25)),
                ('eposta', models.EmailField(blank=True, max_length=254, null=True)),
                ('location', models.CharField(blank=True, max_length=30)),
                ('birth_date', models.DateField(blank=True, default=datetime.datetime.now, null=True)),
                ('photo', models.ImageField(blank=True, default='/userprofiles/canberk2/628286_anonym_avatar_default_head_person_icon.png', null=True, upload_to='pp/')),
                ('kapak', models.ImageField(blank=True, default='/userprofiles/canberk2/5559852.jpg', null=True, upload_to='kapak/')),
                ('timestamp', models.DateField(auto_now_add=True)),
                ('points', models.PositiveIntegerField(default=0, verbose_name='points')),
                ('dailypoints', models.PositiveIntegerField(default=0, verbose_name='dailypoints')),
                ('onayli', models.BooleanField(default=False)),
                ('begendiklerim', models.ManyToManyField(blank='True', related_name='begendigim', to='api.content')),
                ('followers', models.ManyToManyField(blank='True', related_name='following', to=settings.AUTH_USER_MODEL)),
                ('gruplarim', models.ManyToManyField(blank='True', related_name='katildigim', to='api.group')),
                ('rozetler', models.ManyToManyField(blank='True', related_name='rozetler', to='api.badges')),
                ('sonraoku', models.ManyToManyField(blank='True', related_name='sonra', to='api.content')),
                ('takipettiklerim', models.ManyToManyField(blank='True', related_name='takipci', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile_user', to=settings.AUTH_USER_MODEL)),
                ('verdigimoylar', models.ManyToManyField(blank='True', related_name='verdigimoylar', to='api.pollquestion')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalityQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(default='', max_length=100)),
                ('body', models.TextField(blank=True, default='', max_length=100, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to=api.models.nameFile7)),
                ('olusturan', models.TextField(default='', max_length=18)),
                ('answer', models.ManyToManyField(blank=True, null=True, related_name='personality_answer', to='api.personalityanswer')),
            ],
        ),
        migrations.AddField(
            model_name='personalityanswer',
            name='result',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='personalityresults', to='api.personalityresult'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=30)),
                ('description', models.TextField(blank=True, max_length=155)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('badge_img', models.TextField(blank=True, max_length=955)),
                ('description_badge', models.TextField(blank=True, max_length=155)),
                ('puan_badge', models.PositiveIntegerField(blank=True, default=0)),
                ('seen', models.BooleanField(default=False)),
                ('actor', models.ManyToManyField(blank=True, related_name='notification_actor', to=settings.AUTH_USER_MODEL)),
                ('badge', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notification_badge', to='api.badges')),
                ('user', models.ManyToManyField(related_name='notification_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('msg_content', models.TextField(max_length=240)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('seen', models.BooleanField(default=False)),
                ('conversation_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversation', to='api.conversation')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner', to=settings.AUTH_USER_MODEL)),
                ('reciever', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reciever', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HelpMessages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=800)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('replied', models.BooleanField(default=False)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='help_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Hashtags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.TextField(max_length=240)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_author', to=settings.AUTH_USER_MODEL)),
                ('blog_comment', models.ManyToManyField(blank=True, null=True, related_name='tag_blogcommentcontent', to='api.blogpostcomment')),
                ('blog_content', models.ManyToManyField(blank=True, null=True, related_name='tag_blogcontent', to='api.blogpost')),
                ('comment', models.ManyToManyField(blank=True, null=True, related_name='tag_commentcontent', to='api.contentcomment')),
                ('content', models.ManyToManyField(blank=True, null=True, related_name='tag_content', to='api.content')),
                ('grup_content', models.ManyToManyField(blank=True, null=True, related_name='tag_grupcontent', to='api.grupicerikleri')),
            ],
        ),
        migrations.CreateModel(
            name='GrupIcerikleriComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('asagi', models.ManyToManyField(blank=True, null=True, related_name='gcontentcomment_down', to=settings.AUTH_USER_MODEL)),
                ('blogpost', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grupiceriklericomments', to='api.grupicerikleri')),
                ('yazan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('yukari', models.ManyToManyField(blank=True, null=True, related_name='gcontentcomment_up', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FollowerRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_follower', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='content',
            name='poll',
            field=models.ManyToManyField(blank=True, null=True, related_name='content_quiz', to='api.pollquestion'),
        ),
        migrations.AddField(
            model_name='content',
            name='quiz',
            field=models.ManyToManyField(blank=True, null=True, related_name='content_quiz', to='api.quiz'),
        ),
        migrations.AddField(
            model_name='content',
            name='saskin',
            field=models.ManyToManyField(blank=True, null=True, related_name='emoji_saskin', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='content',
            name='sevdim',
            field=models.ManyToManyField(blank=True, null=True, related_name='emoji_sevdim', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='content',
            name='sinirli',
            field=models.ManyToManyField(blank=True, null=True, related_name='emoji_sinirli', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='content',
            name='test',
            field=models.ManyToManyField(blank=True, null=True, related_name='personality_quest', to='api.personalityquestion'),
        ),
        migrations.AddField(
            model_name='content',
            name='uzgun',
            field=models.ManyToManyField(blank=True, null=True, related_name='emoji_uzgun', to=settings.AUTH_USER_MODEL),
        ),
    ]
